---
services:
  mongo:
    image: mongo:8-noble
    container_name: mongo
    hostname: mongo
    ports:
      - 27017:27017
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
    networks:
      - bmail

  mongo-express:
    image: mongo-express:1-20-alpine3.19
    container_name: mongo-express
    hostname: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - bmail

  web-server:
    image: node:24-bookworm
    container_name: web-server
    hostname: web-server
    ports:
      - "8080:8080"
    restart: "no"
    command: bash -c "
              cd /app/src/webServer && \
              npm install && \
              npm start"
    volumes:
      - ./:/app/
    depends_on:
      bloom-filter:
        condition: service_healthy
    networks:
      - bmail

  bloom-filter:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: bloom-filter
    hostname: bloom-filter
    restart: "no"
    command: bash -c "
              mkdir -p build/app && \
              cd build/app && \
              cmake ../.. && \
              make && \
              ./bloom-filter 0.0.0.0 12345 8 1 2"
    volumes:
      - ./:/app
    ports:
      - "12345:12345"
    healthcheck:
      test: ["CMD", "bash", "-c", "test -f /tmp/tcp-server"]
      interval: 1s
      timeout: 10s
      retries: 100

    networks:
      - bmail

  bloom-filter-tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: bloom-filter-tests
    hostname: bloom-filter-tests
    restart: "no"
    command: bash -c "
              mkdir -p build/tests && \
              cd build/tests && \
              cmake ../../tests && \
              make && \
              ./runTests"
    volumes:
      - ./:/app

  python-client:
    image: python:3-bookworm
    container_name: python-client
    hostname: python-client
    restart: "no"
    command: python /app/src/bloomFilter/tcpClient.py bloom-filter 12345
    volumes:
      - ./:/app/
    depends_on:
      bloom-filter:
        condition: service_healthy
    networks:
      - bmail

networks:
  bmail:
    name: bmail
volumes:
  mongo-data:
